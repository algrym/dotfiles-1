// Documentation: http://jscs.info/rules
{
    "disallowAnonymousFunctions": false,
    "disallowArrowFunctions": false,
    "disallowCapitalizedComments": false,
    "disallowCommaBeforeLineBreak": false,
    "disallowCurlyBraces": false,
    "disallowDanglingUnderscores": false,
    "disallowEmptyBlocks": true,
    "disallowKeywords": ["with"],
    "disallowMixedSpacesAndTabs": true,
    "disallowMultipleLineBreaks": true,
    "disallowMultipleLineStrings": true,
    "disallowMultipleSpaces": { "allowEOLComments": true },
    "disallowMultipleVarDecl": true,
    "disallowNewlineBeforeBlockStatements": true,
    "disallowNodeTypes": ["LabeledStatement"],
    "disallowOperatorBeforeLineBreak": ["."],
    "disallowPaddingNewlinesInBlocks": { "open": false, "close": true },
    "disallowSpaceAfterObjectKeys": true,
    "disallowSpaceAfterPrefixUnaryOperators": ["++", "--", "~", "!"],
    "disallowSpaceBeforeComma": true,
    "disallowSpaceBeforePostfixUnaryOperators": ["++", "--"],
    "disallowSpaceBeforeSemicolon": true,
    "disallowSpacesInCallExpression": true,
    "disallowSpacesInsideParentheses": true,
    "disallowSpacesInsideParenthesizedExpression": true,
    "disallowTrailingComma": true,
    "disallowYodaConditions": true,
    "maximumLineLength": 100,
    "requireAnonymousFunctions": { "allExcept": ["declarations"] },
    "requireBlocksOnNewline": { "includeComments": true },
    "requireCapitalizedConstructors": true,
    "requireCommaBeforeLineBreak": true,
    "requireCurlyBraces": ["if", "else", "for", "while", "do", "try", "catch"],
    "requireDollarBeforejQueryAssignment": "ignoreProperties",
    "requireDotNotation": { "allExcept": [ "keywords" ] },
    "requireKeywordsOnNewLine": ["else", "catch"],
    "requireLineBreakAfterVariableAssignment": true,
    "requireLineFeedAtFileEnd": true,
    "requirePaddingNewLinesBeforeLineComments": { "allExcept": "firstAfterCurly" },
    "requireParenthesesAroundIIFE": true,
    "requireSemicolons": true,
    "requireSpaceAfterBinaryOperators": true,
    "requireSpaceAfterKeywords": ["do", "for", "if", "else", "switch", "case", "try", "catch", "void", "while", "with", "return", "typeof"],
    "requireSpaceBeforeBinaryOperators": true,
    "requireSpaceBeforeBlockStatements": true,
    "requireSpaceBeforeObjectValues": true,
    "requireSpaceBetweenArguments": true,
    "requireSpacesInConditionalExpression": { "afterTest": true, "beforeConsequent": true, "afterConsequent": true, "beforeAlternate": true },
    "requireSpacesInForStatement": true,
    "requireSpacesInsideObjectBrackets": { "allExcept": [ "}", ")" ] },
    "validateLineBreaks": "LF",
    "validateParameterSeparator": ", "
}
