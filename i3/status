#!/usr/bin/env perl

use strict;
use warnings;
use JSON;

# Donâ€™t buffer any output.
$| = 1;

open(my $i3status, "-|", "i3status") or die $!;

# Skip the first two lines which contains the version header and the start of
# an infinite array.
print(scalar <$i3status>);
print(scalar <$i3status>);

# Read lines forever, ignore a comma at the beginning if it exists.
while (my ($statusline) = (<$i3status> =~ /^,?(.*)/)) {
  my @blocks = @{decode_json($statusline)};

  # Music playing:
  if (`pgrep deadbeef` && `deadbeef --nowplaying-tf '%isplaying%'`) {
    my $music = `deadbeef --nowplaying-tf '%artist% - %title%'`;
    splice(@blocks, 1, 0, {
      full_text => "\x{f025} $music",
      color => '#D78787'
    });
  }

  # Backlight
  my $backlight = do {
    open my $fh, '<', '/sys/class/backlight/intel_backlight/brightness';
    my $cur = <$fh>;
    close $fh;
    open my $fh, '<', '/sys/class/backlight/intel_backlight/max_brightness';
    my $max = <$fh>;
    close $fh;
    $cur / $max * 100;
  };
  splice(@blocks, -2, 0, {
    full_text => sprintf("\x{f0eb} %.0f", $backlight)
  }) if defined $backlight;

  print encode_json(\@blocks) . ",\n";
}

close($i3status);
